{"version":3,"sources":["components/Button.js","components/Text.js","components/InputText.js","utils/sorting.js","components/Table.js","components/Frame.js","components/CheckShowTitle.js","components/Loading.js","components/SelectCity.js","App.js","index.js"],"names":["Container","styled","div","React","memo","url","name","request","onClicked","window","location","onClick","props","size","text","Input","input","value","setValue","onChange","e","target","onKeyDown","keyCode","placeholder","sort","arr","type","isUp","a","b","aa","bb","c","d","transform","slice","str2int","length","ratio2int","alert","ch","includes","split","eok","cheon","replace","repeat","ratio","Table","table","Td","td","width","Thead","thead","Tr","tr","Th","th","data","titles","useState","upSorted","setUpSorted","map","title","t_index","key","row","r_index","href","id","HeaderContainer","FooterContainer","Header","Footer","CheckBtn","button","isShow","setTitles","className","tooltip","color","LoadingAnimationContainer","ListContainer","StartButton","Button","SelectCity","setData","setIsLoading","stage","addr","reqParams","setReqParams","cityList","setCityList","getIdAddr","selectedAddr","axios","get","params","then","resp","catch","err","console","log","city","c_index","Root","MainContainer","MenuBar","ContentsContainer","isLoading","initialTitles","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe980a18.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 50px;\n  margin: 20px 10px;\n  background: #3b6978;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  color: whitesmoke;\n  border-radius: 5px;\n\n  cursor: pointer;\n  &:hover {\n    background: #204051;\n  }\n  transition: 0.3s;\n`;\nfunction Button({ url, name, request }) {\n  let onClicked = \"\";\n  if (url) {\n    onClicked = () => {\n      window.location = url;\n    };\n  } else if (request) {\n    onClicked = request;\n  } else {\n    onClicked = () => {};\n  }\n  return <Container onClick={onClicked}>{name}</Container>;\n}\n\nexport default React.memo(Button);\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  color: white;\n  margin: 10px 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  font-size: ${props => props.size};\n`;\nfunction Text({ text, size }) {\n  return <Container size={size + \"px\"}>{text}</Container>;\n}\n\nexport default React.memo(Text);\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  margin-top: 20px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  background: #dee3e2;\n  width: calc(100% - 40px);\n  height: 20px;\n\n  margin-left: 10px;\n  padding: 10px;\n  border: none;\n  border-radius: 2px;\n  font-size: 18px;\n`;\nfunction InputText({ value, setValue, request }) {\n  const onChange = e => {\n    setValue(e.target.value);\n  };\n  const Enter = e => {\n    if (e.keyCode === 13) {\n      request();\n    }\n  };\n  return (\n    <Container>\n      <Input\n        value={value}\n        onChange={onChange}\n        onKeyDown={Enter}\n        placeholder=\"조회할 동 번호를 입력하세요.\"\n      />\n    </Container>\n  );\n}\n\nexport default React.memo(InputText);\n","export function sort(arr, type, isUp) {\n  // 문자 형식\n  if (type === \"동\" || type === \"단지명\" || type === \"현관구조\") {\n    if (isUp) {\n      arr.sort(function(a, b) {\n        // 오름차순\n        return a[type] < b[type] ? -1 : a[type] > b[type] ? 1 : 0;\n      });\n    } else {\n      arr.sort(function(a, b) {\n        // 내림차순\n        return a[type] > b[type] ? -1 : a[type] < b[type] ? 1 : 0;\n      });\n    }\n\n    // 숫자형식\n  } else {\n    arr.sort(function(a, b) {\n      // 오름차순\n      let aa = \"\";\n      let bb = \"\";\n      if (a[type] === null) {\n        aa = \"0\";\n      } else {\n        aa = a[type];\n      }\n      if (b[type] === null) {\n        bb = \"0\";\n      } else {\n        bb = b[type];\n      }\n\n      var [c, d] = [\"\", \"\"];\n      if (isUp) {\n        [c, d] = transform(aa, bb, type);\n      } else {\n        [c, d] = transform(bb, aa, type);\n      }\n      return c - d;\n    });\n  }\n  return arr;\n}\n\nfunction transform(a, b, type) {\n  switch (type) {\n    case \"동\":\n    case \"단지명\":\n    case \"현관구조\":\n      return;\n    case \"입주년도\":\n      return [a.slice(0, 4) + a.slice(5, 7), b.slice(0, 4) + b.slice(5, 7)];\n\n    case \"총 세대수\":\n      return [\n        str2int(a.slice(0, a.length - 2)),\n        str2int(b.slice(0, b.length - 2))\n      ];\n\n    case \"공급면적\":\n    case \"전용면적\":\n    case \"공급\":\n    case \"전용\":\n      return [a.slice(0, a.length - 1), b.slice(0, b.length - 1)];\n\n    case \"매매가\":\n    case \"전세가\":\n    case \"갭\":\n    case \"평당가\":\n      return [str2int(a), str2int(b)];\n\n    case \"전세가율\":\n      return [ratio2int(a), ratio2int(b)];\n\n    case \"No\":\n    case \"세대수\":\n    case \"방 수\":\n    case \"화장실 수\":\n    case \"매매\":\n    case \"전세\":\n    case \"월세\":\n      return [a, b];\n\n    default:\n      alert(\"Type Error in Sorting.js\");\n  }\n}\n\nfunction str2int(ch) {\n  // 2억 5천~2억 8천 => 25000\n\n  // [0]=>최저가로 비교, [1]=>최고가로 비교\n  if (ch.includes(\"~\")) {\n    ch = ch.split(\"~\")[0];\n  }\n\n  if (ch.includes(\"억\")) {\n    if (ch[ch.length - 1] === \"억\") {\n      ch = ch.slice(0, ch.length - 1) + \"0000\";\n    } else {\n      let [eok, cheon] = ch.split(\"억\");\n      if (cheon.includes(\",\")) {\n        // slice(1)은 공백제거\n        cheon = cheon.slice(1).replace(\",\", \"\");\n      }\n      // 8억 500 => 80500 (' 500' => '0500')\n      else {\n        cheon = \"0\".repeat(5 - cheon.length) + cheon.slice(1);\n      }\n      ch = eok + cheon;\n    }\n  } else {\n    if (ch.includes(\",\")) {\n      ch = ch.replace(\",\", \"\");\n    }\n  }\n\n  return ch;\n}\n\nfunction ratio2int(ratio) {\n  if (ratio.includes(\"~\")) {\n    return ratio.split(\"~\")[0];\n  } else {\n    return ratio.slice(0, ratio.length - 1);\n  }\n}\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { sort } from \"../utils/sorting\";\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  height: 24px;\n`;\n\nconst Table = styled.table`\n  height: 100%;\n  width: 100%;\n  border-color: lightgray;\n  border-collapse: collapse;\n\n  /* fixed, auto */\n  table-layout: fixed;\n  text-align: center;\n`;\n\nconst Td = styled.td`\n  border-bottom: 1px solid darkgray;\n  width: ${props => props.width};\n  padding: 5px;\n\n  a {\n    color: green;\n    text-decoration: none;\n  }\n  a:visited {\n    color: green;\n  }\n`;\n\nconst Thead = styled.thead``;\n\nconst Tr = styled.tr``;\n\nconst Th = styled.th`\n  width: ${props => props.width};\n  border-color: lightgray;\n  background: lightgray;\n  cursor: pointer;\n\n  /* fixed headerr */\n  position: sticky;\n  top: 0;\n`;\n\nfunction Tables({ data, titles }) {\n  const [upSorted, setUpSorted] = useState(false);\n  const Sort = type => {\n    if (upSorted) {\n      sort(data, type, upSorted);\n    } else {\n      sort(data, type, upSorted);\n    }\n    setUpSorted(!upSorted);\n  };\n  return (\n    <Container>\n      <Table>\n        {/* header(columns) */}\n        <Thead>\n          <Tr>\n            {titles.map((title, t_index) =>\n              title[\"isShow\"] ? (\n                <Th\n                  key={t_index}\n                  width={title[\"width\"]}\n                  onClick={() => Sort(title[\"type\"])}\n                >\n                  {title[\"type\"]}\n                </Th>\n              ) : (\n                <></>\n              )\n            )}\n          </Tr>\n        </Thead>\n        {/* tables(contents) */}\n        <tbody>\n          {data.map((row, r_index) => (\n            <Tr key={r_index}>\n              {titles.map((title, t_index) =>\n                title[\"isShow\"] ? (\n                  <Td key={t_index} width={title[\"width\"]}>\n                    {title.type === \"단지명\" ? (\n                      <a\n                        target=\"_blank\"\n                        href={\"https://new.land.naver.com/complexes/\" + row.id}\n                      >\n                        {row[title.type]}\n                      </a>\n                    ) : (\n                      row[title.type]\n                    )}\n                  </Td>\n                ) : (\n                  <></>\n                )\n              )}\n            </Tr>\n          ))}\n        </tbody>\n      </Table>\n    </Container>\n  );\n}\n\nexport default React.memo(Tables);\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst HeaderContainer = styled.div`\n  width: 100%;\n  height: 50px;\n  background: #84a9ac;\n  color: white;\n\n  display: flex;\n  align-items: center;\n\n  h1 {\n    margin-left: 30px;\n  }\n`;\nconst FooterContainer = styled.div`\n  width: 100%;\n  height: 50px;\n  background: #84a9ac;\n\n  display: flex;\n  align-items: center;\n\n  h5 {\n    margin: 0px 20px;\n    color: lightgray;\n  }\n`;\nexport function Header() {\n  return (\n    <HeaderContainer>\n      <h1>아파트 검색기</h1>\n    </HeaderContainer>\n  );\n}\n\nexport function Footer() {\n  return (\n    <FooterContainer>\n      <h5>\n        본 프로그램은 상업 목적으로 사용될 수 없습니다. Powered by JM 2020{\" \"}\n      </h5>\n    </FooterContainer>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  position: absolute;\n  bottom: 0px;\n\n  margin: 10px 10px;\n  border: 1px solid gray;\n  border-radius: 5px;\n  padding: 5px;\n\n  width: calc(100% - 20px);\n  box-sizing: border-box;\n`;\nconst CheckBtn = styled.button`\n  background: ${props => (props.isShow ? \"#3b6978\" : \"darkgray\")};\n  margin: 3px;\n  border: none;\n  border-radius: 2px;\n\n  color: white;\n  font-size: 12px;\n  cursor: pointer;\n`;\n\nfunction CheckShowTitle({ titles, setTitles }) {\n  const onClick = type => {\n    setTitles(\n      titles.map(title =>\n        title[\"type\"] === type ? { ...title, isShow: !title.isShow } : title\n      )\n    );\n  };\n\n  return (\n    <Container>\n      {/* id 버튼은 보여주지않음 */}\n      {titles.slice(0, titles.length - 1).map((title, t_index) => (\n        <CheckBtn\n          key={t_index}\n          isShow={title.isShow}\n          onClick={() => onClick(title.type)}\n          className={title.tooltip ? \"tooltip\" : \"\"}\n          // style에서는 color만 인식해서 tooltipText 대안으로 사용\n          color={title.tooltip}\n        >\n          {title.type}\n        </CheckBtn>\n      ))}\n    </Container>\n  );\n}\n\nexport default React.memo(CheckShowTitle);\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  position: absolute;\n\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  h1 {\n    color: white;\n    font-size: 16px;\n  }\n`;\n\nconst LoadingAnimationContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nfunction Loading() {\n  return (\n    <Container>\n      <h1>아파트 정보를 가져오는 중입니다...</h1>\n      <LoadingAnimationContainer>\n        <div id=\"loading\"></div>\n      </LoadingAnimationContainer>\n    </Container>\n  );\n}\n\nexport default React.memo(Loading);\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\n\nconst Container = styled.div`\n  width: 100%;\n\n  padding-left: 20px;\n  padding-right: 20px;\n  margin-top: 20px;\n  box-sizing: border-box;\n`;\n\nconst ListContainer = styled.div`\n  width: 100%;\n  height: calc(100vh - 480px);\n\n  overflow: scroll;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-content: baseline;\n`;\n\nconst StartButton = styled.div`\n  cursor: pointer;\n  color: white;\n  background: green;\n  width: 100%;\n  height: 30px;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  border-radius: 5px;\n  margin-bottom: 10px;\n\n  transition: 0.5s;\n  &:hover {\n    background: darkgreen;\n  }\n`;\nconst Button = styled.div`\n  background: gray;\n  height: 20px;\n  width: 80px;\n  font-size: 12px;\n\n  margin: 5px;\n  cursor: pointer;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  border-radius: 8px;\n\n  transition: 0.5s;\n  &:hover {\n    background: lightgray;\n  }\n`;\n\nfunction SelectCity({ setData, setIsLoading }) {\n  const [reqParams, setReqParams] = useState({\n    stage: 0,\n    addr: \"동 선택\",\n  });\n  const [cityList, setCityList] = useState([]);\n\n  const getIdAddr = (selectedAddr) => {\n    if (selectedAddr === \"init\") {\n      reqParams.stage = 0;\n    }\n\n    switch (reqParams.stage) {\n      // 시리스트 가져오기\n      case 0:\n        axios\n          .get(\"http://110.9.16.75:5001/getIdCities\", {\n            params: { stage: 0, addr: \"\" },\n          })\n          .then((resp) => {\n            setCityList(resp.data);\n            setReqParams({\n              addr: \"전국\",\n              stage: (reqParams.stage += 1),\n            });\n          })\n          .catch((err) => alert(\"Error:\", err));\n        break;\n      // 구리스트 가져오기\n      case 1:\n        axios\n          .get(\"http://110.9.16.75:5001/getIdAddr\", {\n            params: {\n              addr: selectedAddr,\n              stage: reqParams.stage,\n            },\n          })\n          .then((resp) => {\n            setCityList(resp.data);\n            setReqParams({\n              addr: selectedAddr,\n              stage: reqParams.stage + 1,\n            });\n          });\n        break;\n      case 2:\n        axios\n          .get(\"http://110.9.16.75:5001/getIdAddr\", {\n            params: {\n              addr: reqParams.addr + \"-\" + selectedAddr,\n              stage: reqParams.stage,\n            },\n          })\n          .then((resp) => {\n            setCityList(resp.data);\n            setReqParams({\n              addr: reqParams.addr + \"-\" + selectedAddr,\n              stage: reqParams.stage + 1,\n            });\n          });\n        break;\n      case 3:\n        setIsLoading(true);\n        axios\n          .get(\"http://110.9.16.75:5001/getIdAddr\", {\n            params: {\n              addr: reqParams.addr + \"-\" + selectedAddr,\n              stage: reqParams.stage,\n            },\n          })\n          .then((resp) => {\n            if (typeof resp[\"data\"] === \"object\") {\n              setData(resp[\"data\"]);\n              // 아파트 외의 정보가 return되는 경우\n            } else {\n              alert(resp[\"data\"]);\n            }\n            setIsLoading(false);\n            setCityList([]);\n            setReqParams({\n              addr: \"도시선택\",\n              stage: 0,\n            });\n          })\n          .catch((err) => {\n            setIsLoading(false);\n            alert(err);\n          });\n        break;\n      default:\n        console.log(\"Error in SelecCity!\");\n        break;\n    }\n  };\n\n  return (\n    <Container>\n      <StartButton onClick={() => getIdAddr(\"init\")}>\n        {reqParams.addr}\n      </StartButton>\n      <ListContainer>\n        {cityList.map((city, c_index) => (\n          <Button key={c_index} onClick={() => getIdAddr(city)}>\n            {city}\n          </Button>\n        ))}\n      </ListContainer>\n    </Container>\n  );\n}\n\nexport default SelectCity;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport \"./App.css\";\nimport Button from \"./components/Button\";\nimport Text from \"./components/Text\";\nimport InputText from \"./components/InputText\";\nimport Tables from \"./components/Table\";\nimport { Footer, Header } from \"./components/Frame\";\nimport CheckShowTitle from \"./components/CheckShowTitle\";\nimport Loading from \"./components/Loading\";\nimport SelectCity from \"./components/SelectCity\";\nimport axios from \"axios\";\n\nconst Root = styled.div`\n  height: 100%;\n  width: 100%;\n`;\n\nconst MainContainer = styled.div`\n  height: calc(100% - 100px);\n  width: 100%;\n  display: flex;\n`;\n\nconst MenuBar = styled.div`\n  background: #84a9ac;\n  width: 220px;\n\n  /* 확인 할 항목을 하단정렬하기 위해 */\n  position: relative;\n`;\n\nconst ContentsContainer = styled.div`\n  background: ${(props) => (props.isLoading ? \"#4A554E\" : \"#cae8d5\")};\n  overflow: scroll;\n  flex: 1;\n  transition: 0.5s;\n\n  border: 1px solid darkgray;\n  box-sizing: border-box;\n\n  /* 로딩 div poisition:absolute를 위함 */\n  position: relative;\n`;\n\nfunction App() {\n  const initialData = [];\n\n  const [data, setData] = useState(initialData);\n  const [titles, setTitles] = useState(initialTitles);\n  const [isLoading, setIsLoading] = useState(false);\n  const [idDong, setIdDong] = useState(\"\");\n\n  const onClickGetAptList = () => {\n    setIdDong(\"\");\n    setIsLoading(true);\n    axios\n      .get(\"http://110.9.16.75:5001/getAptList\", {\n        params: {\n          NumDong: idDong,\n        },\n      })\n      .then((resp) => {\n        // console.log(resp[\"data\"]);\n        // 정상적으로 resp시\n        if (typeof resp[\"data\"] === \"object\") {\n          setData(resp[\"data\"]);\n          // 아파트 외의 정보가 return되는 경우\n        } else {\n          alert(resp[\"data\"]);\n        }\n        setIsLoading(false);\n      })\n      .catch((err) => {\n        alert(err);\n        setIsLoading(false);\n      });\n  };\n\n  return (\n    <Root>\n      <Header />\n      <MainContainer>\n        <MenuBar>\n          <Text text=\"동 단위 아파트 리스트\" size=\"22\" />\n          <Button\n            url=\"https://m.land.naver.com/map/37.482968:127.0634:14:1168010300/APT:JGC/A1:B1:B2\"\n            name=\"네이버 부동산 바로가기\"\n          />\n\n          {/* <InputText\n            value={idDong}\n            setValue={setIdDong}\n            request={onClickGetAptList}\n          />\n          <Button name=\"동단위 아파트 조회\" request={onClickGetAptList} /> */}\n\n          <SelectCity setData={setData} setIsLoading={setIsLoading} />\n\n          {/* <Text text=\"확인 할 항목\" size=\"22\"></Text> */}\n          <CheckShowTitle titles={titles} setTitles={setTitles} />\n        </MenuBar>\n        <ContentsContainer isLoading={isLoading}>\n          <Tables data={data} titles={titles} />\n          {isLoading ? <Loading /> : <></>}\n        </ContentsContainer>\n      </MainContainer>\n      <Footer />\n    </Root>\n  );\n}\n\n// 총 22개\nconst initialTitles = [\n  {\n    type: \"동\",\n    width: 50,\n    isShow: true,\n  },\n  {\n    type: \"단지명\",\n    width: 120,\n    isShow: true,\n  },\n  {\n    type: \"No\",\n    width: 50,\n    isShow: false,\n    tooltip: \"같은 아파트 넘버링\",\n  },\n  {\n    type: \"입주년도\",\n    width: 70,\n    isShow: true,\n  },\n  {\n    type: \"총 세대수\",\n    width: 70,\n    isShow: true,\n  },\n  {\n    type: \"세대수\",\n    width: 50,\n    isShow: false,\n  },\n  {\n    type: \"공급면적\",\n    width: 70,\n    isShow: false,\n    tooltip: \"단위: ㎡\",\n  },\n  {\n    type: \"공급\",\n    width: 70,\n    isShow: true,\n    tooltip: \"단위: 평\",\n  },\n  {\n    type: \"전용면적\",\n    width: 70,\n    isShow: false,\n    tooltip: \"단위: ㎡\",\n  },\n  {\n    type: \"전용\",\n    width: 70,\n    isShow: true,\n    tooltip: \"단위: 평\",\n  },\n  {\n    type: \"매매가\",\n    width: 120,\n    isShow: true,\n  },\n  {\n    type: \"전세가\",\n    width: 120,\n    isShow: true,\n  },\n  {\n    type: \"전세가율\",\n    width: 70,\n    isShow: true,\n  },\n  {\n    type: \"갭\",\n    width: 100,\n    isShow: true,\n    tooltip: \"최저매매가-최고전세가\",\n  },\n  {\n    type: \"평당가\",\n    width: 70,\n    isShow: true,\n    tooltip: \"최저매매가/평 수\",\n  },\n  {\n    type: \"방 수\",\n    width: 50,\n    isShow: false,\n  },\n  {\n    type: \"화장실 수\",\n    width: 70,\n    isShow: false,\n  },\n  {\n    type: \"현관구조\",\n    width: 70,\n    isShow: true,\n    tooltip: \"복도식/현관식/복합식\",\n  },\n  {\n    type: \"매매\",\n    width: 50,\n    isShow: true,\n    tooltip: \"매매 수\",\n  },\n  {\n    type: \"전세\",\n    width: 50,\n    isShow: true,\n    tooltip: \"전세 수\",\n  },\n  {\n    type: \"월세\",\n    width: 50,\n    isShow: false,\n    tooltip: \"월세 수\",\n  },\n  {\n    type: \"id\",\n    width: 50,\n    isShow: false,\n  },\n];\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}